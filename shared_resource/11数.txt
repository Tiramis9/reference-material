1.二叉树
二叉树的每个结点至多只有二棵子树(不存在度大于2的结点)，二叉树的子树有左右之分，次序不能颠倒。二叉树的第i层至多有2^i-1个结点；深度为k的二叉树至多有2^k-1个结点；

其中二叉树也可以分为满二叉树和完全二叉树
满二叉树：除最后一层无任何子节点外，每一层上的所有结点都有两个子结点。也可以这样理解，除叶子结点外的所有结点均有两个子结点。节点数达到最大值，所有叶子结点必须在同一层上。
　　满二叉树的性质：
　　1) 一颗树深度为h，最大层数为k，深度与最大层数相同，k=h;
　　2) 叶子数为2h;
　　3) 第k层的结点数是：2k-1;
　　4) 总结点数是：2k-1，且总节点数一定是奇数。


完全二叉树：若设二叉树的深度为h，除第 h 层外，其它各层 (1～(h-1)层) 的结点数都达到最大个数，第h层所有的结点都连续集中在最左边，这就是完全二叉树。

注：完全二叉树是效率很高的数据结构，堆是一种完全二叉树或者近似完全二叉树，所以效率极高，像十分常用的排序算法、Dijkstra算法、Prim算法等都要用堆才能优化，二叉排序树的效率也要借助平衡性来提高，而平衡性基于完全二叉树。